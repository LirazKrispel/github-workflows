on:
  workflow_call:
    inputs:
      upload:
        required: false
        type: boolean
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true

jobs:
  build-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Docker build
        if: ${{inputs.upload}}
        run: |
          echo "${{inputs.upload}}"
      # - name: Install GitVersion
      #   uses: gittools/actions/gitversion/setup@v0.9.9
      #   with:
      #     versionSpec: '5.6.7'
           
      # - name: Checkout the repo
      #   uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0

      # - name: Determine version
      #   id: gitversion
      #   uses: gittools/actions/gitversion/execute@v0.9.9

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.aws-access-key-id }}
      #     aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
      #     aws-region: us-east-1

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Set envs
      #   id: set-envs
      #   run: |
      #     REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
      #     echo "git_repo_name=${REPO_NAME}" | tee -a $GITHUB_ENV
      #     echo "git_version=${{ steps.gitversion.outputs.fullSemVer }}" | tee -a $GITHUB_ENV
      #     REGISTRY=737852819915.dkr.ecr.us-east-1.amazonaws.com
      #     PROJECT=talentfabric
      #     TAG=${{env.git_version}}
      #     IMAGE_NAME=${REGISTRY}/${PROJECT}/${REPO_NAME}:${TAG}
      #     echo "docker_image_name=${IMAGE_NAME}" | tee -a $GITHUB_ENV

      # - name: Docker build
      #   run: |
      #     docker build -t ${{env.docker_image_name}} .

      # - name: Docker push
      #   if: ${{env.upload}} = true 
      #   run: |
      #     docker push ${{env.docker_image_name}}

      # - name: Git tag
      #   if: ${{env.upload}} = true 
      #   env:
      #     TAG: ${{env.git_version}}
      #   run: |
      #     git config user.name "GitHub Actions Bot"
      #     git config user.email "<>"
      #     git tag "${TAG}" || true
      #     git push --tags || true